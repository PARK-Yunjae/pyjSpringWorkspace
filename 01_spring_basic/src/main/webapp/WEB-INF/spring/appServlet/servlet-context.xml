<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.myspring.test" />
	
	<!-- 이하 코드부터 직접 작성한 내용 -->
	<!-- _01Member member = new _01Member();-->
	   <beans:bean id="member" class="com.myspring.test._01Member" />
	
	<!-- 2단계 : 생성자를 이용한 DI기능 -->
		<!-- _02User user = new _02User();-->
    <beans:bean id="user" class="com.myspring.test._02User" />
    
         <!--  생성자 주입 -->     
    <beans:bean id="userDAO" class="com.myspring.test._02UserDAO">
        <beans:constructor-arg ref="user" />
    </beans:bean> 
    
        <!-- 3단계 : setter를 이용한 DI 기능 -->
    <!--
        _03ClientDAO clientDAO = new _03ClientDAO();
        clientDAO.setCompanyName("더조은컴퓨터아카데미");
      -->
    <beans:bean id="clientDAO" class="com.myspring.test._03ClientDAO">
        <beans:property name="schoolName" value="더조은컴퓨터아카데미" />
        
        <!-- 
            clientDAO.setClientList(new ArrayList<String, String>());
            clientDAO.clientList.add("이세돌");
            clientDAO.clientList.add("알파고");
         -->
        <beans:property name="clientList">
            <beans:list>
                <beans:value>이세돌</beans:value>
                <beans:value>알파고</beans:value>
            </beans:list>
        </beans:property>
    
	
</beans:beans>
